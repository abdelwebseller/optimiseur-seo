version: '3.8'

services:
  # Base de données PostgreSQL
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: semantra
      POSTGRES_USER: semantra_user
      POSTGRES_PASSWORD: semantra_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - semantra_network

  # Redis pour Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - semantra_network

  # API Semantra
  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://semantra_user:semantra_password@postgres:5432/semantra
      - REDIS_URL=redis://redis:6379/0
      - ENVIRONMENT=development
      - DEBUG=true
    volumes:
      - .:/app
    depends_on:
      - postgres
      - redis
    networks:
      - semantra_network
    command: uvicorn app:app --host 0.0.0.0 --port 8000 --reload

  # Worker Celery
  celery_worker:
    build: .
    environment:
      - DATABASE_URL=postgresql://semantra_user:semantra_password@postgres:5432/semantra
      - REDIS_URL=redis://redis:6379/0
      - ENVIRONMENT=development
    volumes:
      - .:/app
    depends_on:
      - postgres
      - redis
    networks:
      - semantra_network
    command: celery -A app.core.celery_app worker --loglevel=info

  # Beat Celery (pour les tâches périodiques)
  celery_beat:
    build: .
    environment:
      - DATABASE_URL=postgresql://semantra_user:semantra_password@postgres:5432/semantra
      - REDIS_URL=redis://redis:6379/0
      - ENVIRONMENT=development
    volumes:
      - .:/app
    depends_on:
      - postgres
      - redis
    networks:
      - semantra_network
    command: celery -A app.core.celery_app beat --loglevel=info

volumes:
  postgres_data:
  redis_data:

networks:
  semantra_network:
    driver: bridge 